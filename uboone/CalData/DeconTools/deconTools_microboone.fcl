#include "roialg.fcl"

BEGIN_PROLOG

microboone_roifinderstandard:
{
    tool_type:    ROIFinderStandard
    NumBinsHalf:  3
    Threshold:    [ 3, 3, 3 ] # abs(threshold) for finding a Region Of Interest
    NumSigma:     [ 4, 4, 6 ]
    uPlaneROIPad: [ 50, 50 ] # number of bins to pad both ends of the ROIs
    vPlaneROIPad: [ 50, 50 ] # number of bins to pad both ends of the ROIs
    zPlaneROIPad: [ 50, 50 ] # number of bins to pad both ends of the ROIs
}

microboone_roifinderdifferential:
{
    tool_type:      ROIFinderDifferential
    NumSigma:       [ 3, 3, 3 ]
    ZeroPoint:      [ 2., 2., 2.]
   Max2MinDistance: [ 60, 60, 60]
    uPlaneROIPad:   [ 50, 50 ] # number of bins to pad both ends of the ROIs
    vPlaneROIPad:   [ 50, 50 ] # number of bins to pad both ends of the ROIs
    zPlaneROIPad:   [ 50, 50 ] # number of bins to pad both ends of the ROIs
}

microboone_baselinestandard:
{
    tool_type: BaselineStandard
    NumBinsToAverage: 20
}

microboone_baselinemostprobave:
{
    tool_type: BaselineMostProbAve
}

microboone_baselinewaveformproperties:
{
    tool_type:        BaselineWaveformProperties
    ROIPropertiesAlg: { ROIAlgParams: @local::roiAlg_DigitAboveBaseline }
}

microboone_nobaseline:
{
    tool_type:        NoBaseline
}

microboone_roideconvolution:
{
    tool_type: ROIDeconvolution
    FFTSize:                    128      # re-initialize FFT service to this size
    SaveWireWF:                 0
    DodQdxCalib:                false  # apply wire-by-wire calibration?
    dQdxCalibFileName:          "dQdxCalibrationPlanev1.txt"
    Baseline:                   @local::microboone_baselinemostprobave
}

microboone_mcc7deconvolution:
{
    tool_type:                  MCC7Deconvolution
    DoBaselineSub:              true
    DodQdxCalib:                false  # apply wire-by-wire calibration?
    dQdxCalibFileName:          "dQdxCalibrationPlanev1.txt"
    MinROIAverageTickThreshold: -0.5
    Baseline:                   @local::microboone_baselinemostprobave
}


END_PROLOG
