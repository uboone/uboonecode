#include "services_microboone.fcl"
#include "analysistreemodule_microboone.fcl"
#include "seedservice_microboone.fcl"
#include "eventweight_microboone.fcl"
 

process_name: EventWeightAnaTree

services:
{
  scheduler:    { defaultExceptions: false }    # Make all uncaught exceptions fatal.
  #Load the service that manages root files for histograms.
  TFileService: { fileName: "standard_reco_hist.root" }
  Timing:       {}
  SimpleMemoryCheck:     { ignoreTotal: 1 }     #default is one
  RandomNumberGenerator: {}                     #ART native random number generator
  user:         @local::microboone_services
  message:      @local::standard_info
  FileCatalogMetadata:  @local::art_file_catalog_mc
#  LArSeedService: @local::microboone_seedservice
}

#source is now a root file
source:
{
  module_type: RootInput
  maxEvents:  2            # Number of events to create
}

outputs:
{
 out1:
 {
   module_type: RootOutput
   fileName:    "standard_reco.root"    #default file name, can override from command line with -o or --output
   dataTier:    "detector-simulated"
   fastCloning: false
 } 
}

physics:
{
 producers:{
  # EventWeight
   eventweight:    @local::microboone_eventweight
   rns:            { module_type: "RandomNumberSaver" }
 }
 filters:  {} 
 analyzers:{}
 
 #define the producer and filter modules for this path, order matters, 
 #filters reject all following items.  see lines starting physics.producers below
 simulate: [ rns, eventweight ]
 ana:  [ analysistree ]
 
 #define the output stream, there could be more than one if using filters 
 stream1:  [ out1 ]

 #trigger_paths is a keyword and contains the paths that modify the art::event, 
 #ie filters and producers
 trigger_paths: [simulate] 

 #end_paths is a keyword and contains the paths that do not modify the art::Event, 
 #ie analyzers and output streams.  these all run simultaneously
 end_paths:     [ stream1, ana ] 
}

#physics.producers.eventweight.weight_functions: [ genie_qemacc ]
#services.TimeService.InheritClockConfig: false
#services.user.TimeService.InheritClockConfig: false



physics.analyzers.analysistree:  @local::microboone_analysistree
physics.analyzers.analysistree.HitsModuleLabel:                 "gaushit"
physics.analyzers.analysistree.TrackModuleLabel:                ["trackkalmanhit","stitchkalmanhit","trackkalmanhitcc","stitchkalmanhitcc","pandoraCosmicKHit","pandoraNuKHit","cctrack","trackkalmanhitc3d","stitchkalmanhitc3d"]
physics.analyzers.analysistree.VertexModuleLabel:               ["cccluster", "pandoraNu", "pandoraCosmic"]
physics.analyzers.analysistree.CalorimetryModuleLabel:          ["trackkalmanhitcalo","stitchkalmanhitcalo","trackkalmanhitcalocc","stitchkalmanhitcalocc","pandoraCosmicKHitcalo","pandoraNuKHitcalo","cctrackcaloDUMMY","trackkalmanhitcaloc3d","stitchkalmanhitcaloc3d"]
physics.analyzers.analysistree.ParticleIDModuleLabel:           ["trackkalmanhitpid","stitchkalmanhitpid","trackkalmanhitpidcc","stitchkalmanhitpidcc","pandoraCosmicKHitpid","pandoraNuKHitpid","cctrackpidDUMMY","trackkalmanhitpidc3d","stitchkalmanhitpidc3d"]
physics.analyzers.analysistree.CosmicTaggerAssocLabel:          ["trackkalmanhittag","stitchkalmanhittag","trackkalmanhittagcc","stitchkalmanhittagcc","pandoraCosmicKHitPFPart","pandoraNuKHittag","cctracktagDUMMY","trackkalmanhittagc3d","stitchkalmanhittagc3d"]
physics.analyzers.analysistree.FlashMatchAssocLabel:            ["trackkalmanhitflashmatch","stitchkalmanhitflashmatch","trackkalmanhitflashmatchcc","stitchkalmanhitflashmatchcc","pandoraCosmicKHitFlashMatch","pandoraNuKHitFlashMatch","cctrackflashmatchDUMMY","trackkalmanhitflashmatchc3d","stitchkalmanhitflashmatchc3d"]
physics.analyzers.analysistree.FlashT0FinderLabel:              ["t0","t0","t0","t0","t0","t0","t0","t0","t0"]
physics.analyzers.analysistree.MCT0FinderLabel:                 ["mct0","mct0","mct0","mct0","mct0","mct0","mct0","mct0","mct0"]
physics.analyzers.analysistree.CosmicScoreThresholds:           [0.0]
physics.analyzers.analysistree.GenieGenModuleLabel:             "generator"
physics.analyzers.analysistree.POTModuleLabel:                  "generator"
physics.analyzers.analysistree.CryGenModuleLabel:               "cry"
physics.analyzers.analysistree.ShowerModuleLabel:               ["showerrecofuzzy","showerrecopandora"]
physics.analyzers.analysistree.IgnoreMissingShowers:            true
physics.analyzers.analysistree.SaveCryInfo:                     false



#physics.analyzers.analysistree.SaveCryInfo: false
#physics.analyzers.analysistree.SaveGenieInfo: false
#physics.analyzers.analysistree.SaveMCShowerInfo: false
#physics.analyzers.analysistree.SaveShowerInfo: false
#physics.analyzers.analysistree.SaveGeantInfo: false
#physics.analyzers.analysistree.SaveAuxDetInfo: false
