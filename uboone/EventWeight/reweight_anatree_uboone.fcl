#include "services_microboone.fcl"
#include "hitfindermodules_microboone.fcl"
#include "cluster_microboone.fcl"
#include "particleid_microboone.fcl"
#include "analysistreemodule_microboone.fcl"
#include "filters.fcl"
#include "signalservices_microboone.fcl"
#include "caldata_microboone.fcl"
#include "trackfindermodules_microboone.fcl"
#include "calorimetry_microboone.fcl"
#include "showerfindermodules.fcl"
#include "opticaldetectormodules.fcl"
#include "vertexfindermodules.fcl"
#include "pandoramodules.fcl"
#include "triggeralgo_service.fcl"
#include "photpropservices_microboone.fcl"
#include "photoncountert0matching.fcl"
#include "seedservice_microboone.fcl"
#include "eventweight_microboone.fcl"
 

process_name: EventWeightAnaTree

services:
{
  #Load the service that manages root files for histograms.
  TFileService: { fileName: "standard_reco_hist.root" }
  Timing:       {}
  SimpleMemoryCheck:     { ignoreTotal: 1 }     #default is one
  RandomNumberGenerator: {}                     #ART native random number generator
  user:         @local::microboone_services
  message:      @local::standard_info
  FileCatalogMetadata:  @local::art_file_catalog_mc
#  SeedService: @local::microboone_seedservice
}

#source is now a root file
source:
{
  module_type: RootInput
  maxEvents:  10            # Number of events to create
}

outputs:
{
 out1:
 {
   module_type: RootOutput
   fileName:    "standard_reco_weighted.root"    #default file name, can override from command line with -o or --output
   dataTier:    "detector-simulated"
   fastCloning: false
 } 
}

physics:
{
 producers:{
  # Calorimetry producers
   trackkalmanhitcalo: @local::microboone_calomc
   trackkalspscalo:    @local::microboone_calomc
   beziercalo:         @local::microboone_beziercalorimetry
   trackkalmanhitpid:  @local::microboone_chi2pid
   beziertrackerpid:   @local::microboone_chi2pid
   t0match:            @local::standard_photoncountert0matching
  # EventWeight
   eventweight:    @local::microboone_eventweight
   rns:            { module_type: "RandomNumberSaver" }
 }
 filters:  {} 
 analyzers:{}
 
 #define the producer and filter modules for this path, order matters, 
 #filters reject all following items.  see lines starting physics.producers below
 simulate: [ rns, eventweight ]
 ana:  [ analysistree ]
 
 #define the output stream, there could be more than one if using filters 
 stream1:  [ out1 ]

 #trigger_paths is a keyword and contains the paths that modify the art::event, 
 #ie filters and producers
 trigger_paths: [simulate] 

 #end_paths is a keyword and contains the paths that do not modify the art::Event, 
 #ie analyzers and output streams.  these all run simultaneously
 end_paths:     [ stream1, ana ] 
}

physics.producers.eventweight.weight_functions: [ genie_qemacc ]







# define the list of LArSoft modules to run through the simulate path

physics.producers.calo:          @local::microboone_calomc

physics.analyzers.analysistree:  @local::microboone_analysistree

#physics.producers.t0match.MatchCriteria: 1

physics.producers.trackkalmanhitcalo.TrackModuleLabel:          "trackkalmanhit"
#physics.producers.trackkalspscalo.TrackModuleLabel:             "trackkalsps"
physics.producers.beziercalo.BTrackModuleLabel:                 "beziertracker"

physics.producers.trackkalmanhitpid.TrackModuleLabel:           "trackkalmanhit"
physics.producers.beziertrackerpid.TrackModuleLabel:           "beziertracker"

physics.producers.trackkalmanhitpid.CalorimetryModuleLabel:           "trackkalmanhitcalo"
physics.producers.beziertrackerpid.CalorimetryModuleLabel:           "beziercalo"

#physics.analyzers.analysistree.VertexModuleLabel:       ["trackkalmanhit"]
#physics.analyzers.analysistree.VertexModuleLabel:       []

physics.analyzers.analysistree.TrackModuleLabel:        ["trackkalmanhit"]
physics.analyzers.analysistree.CalorimetryModuleLabel:  ["trackkalmanhitcalo"]

physics.analyzers.analysistree.FlashT0FinderLabel: ["t0"]
physics.analyzers.analysistree.MCT0FinderLabel: ["mct0"]


physics.analyzers.analysistree.GenieGenModuleLabel:     "generator"
physics.analyzers.analysistree.POTModuleLabel:          "generator"
physics.analyzers.analysistree.ParticleIDModuleLabel:   ["trackkalmanhitpid"]

physics.analyzers.analysistree.CosmicTaggerAssocLabel: ["cosmictaggerKHit"]
physics.analyzers.analysistree.FlashMatchAssocLabel:     ["flashTrackMatchkHit"]

physics.analyzers.analysistree.CosmicClusterTaggerAssocLabel: "ccclustertag"

physics.analyzers.analysistree.CryGenModuleLabel: "generator"
physics.analyzers.analysistree.HitsModuleLabel: "linecluster"
physics.analyzers.analysistree.ClusterModuleLabel: "linecluster"
physics.analyzers.analysistree.ShowerModuleLabel: ["showerrecofuzzy", "showerrecopandora"]
physics.analyzers.analysistree.MCShowerModuleLabel: "mcreco"
physics.analyzers.analysistree.IgnoreMissingShowers: true
physics.analyzers.analysistree.SaveHitInfo: true


#physics.analyzers.analysistree.SaveCryInfo: false
#physics.analyzers.analysistree.SaveGenieInfo: false
#physics.analyzers.analysistree.SaveMCShowerInfo: false
#physics.analyzers.analysistree.SaveShowerInfo: false
#physics.analyzers.analysistree.SaveGeantInfo: false
#physics.analyzers.analysistree.SaveAuxDetInfo: false
