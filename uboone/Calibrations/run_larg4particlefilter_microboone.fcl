##include "services_argoneut.fcl"
##include "filters.fcl"
#include "services_microboone.fcl"
#include "larg4particlefilter.fcl"
process_name: lg4Filter
services:
{
  # Load the service that manages root files for histograms.
  TFileService: { fileName: "filtered_hist.root" }
  #Timing:       {}
  RandomNumberGenerator: {} #ART native random number generator
  @table::microboone_simulation_services
#  message:      @local::standard_warning
#  user:         @local::argoneut_services 	     
}

#source is now a root file
source:
{
  module_type: RootInput
  #maxEvents:  10        # Number of events to create
}

outputs:
{
 out1:
 {
   module_type: RootOutput
   fileName:    "filtered.root" #default file name, can override from command line with -o or --output
   dataTier: "reconstructed"
   SelectEvents: [reco]
   fastCloning: true
 }
}

# Define and configure some modules to do work on each event.
# First modules are defined; they are scheduled later.
# Modules are grouped by type.
physics:
{

 producers:
 {
 }

 filters:
 {
  filter:  @local::standard_larg4particlefilter
 }


 #define the producer and filter modules for this path, order matters, 
 #filters reject all following items.  see lines starting physics.producers below
 reco: [ filter ] 
# reco: []
 #filter: [ muonfilter ]

 #define the output stream, there could be more than one if using filters 
 stream1:  [ out1 ]

 #trigger_paths is a keyword and contains the paths that modify the art::event, 
 #ie filters and producers
 trigger_paths: [ reco ] 

 #end_paths is a keyword and contains the paths that do not modify the art::Event, 
 #ie analyzers and output streams.  these all run simultaneously
 end_paths:     [ stream1 ]  
}

#physics.filters.filter.EventList: "./dec_at_res_k_run_4.txt"
#physics.filters.filter.EventList: "/pnfs/uboone/persistent/users/vmeddage/dec_at_res_k_run_4.txt"
#physics.filters.filter.EventList: "/uboone/app/users/vmeddage/calibration/track_list_1.txt"
#physics.filters.filter.EventList: "/uboone/app/users/vmeddage/calibration/v_plane_track_info.txt"
physics.filters.filter.InterestingPDGs: [ 321,-321 ]
physics.filters.filter.ParticleMinMomentum: [ -1.,-1. ]
physics.filters.filter.ParticleMaxMomentum: [-1.,-1. ]
physics.filters.filter.StartInTPC: [ 0,0 ]
physics.filters.filter.StopInTPC: [ 0,0 ]
physics.filters.filter.ParticleMinTPCLength: [ -1.,-1. ]
physics.filters.filter.RequireAllInterestingParticles: false


physics.filters.filter.Selection: 1
# don't preload the FFT kernel
#services.user.LArFFT.FFTOption: ""
services.DetectorClocksService.InheritClockConfig: false
