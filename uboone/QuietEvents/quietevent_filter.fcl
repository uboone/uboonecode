#include "services_microboone.fcl"

BEGIN_PROLOG

microboone_quieteventfilter:
{
  module_type:QuietEventFilter
  WireModuleLabel: "caldata"
  WireThreshold: 5.0
  MaxADCSum: 400000.0
}

microboone_quieteventana:
{
  module_type:QuietEventAna
  WireModuleLabel: "caldata"
  Threshold: 5.0
}

END_PROLOG

process_name: QuietEventFilter
services:
{
  scheduler: { defaultExceptions: false }
  TFileService: { fileName: "quieteventana.root" }
  RandomNumberGenerator: {} 
  @table::microboone_full_services
#  FileCatalogMetadata:    @local::art_file_catalog_data
}
#services.user.UBOpReadoutMap: @local::microboone_opreadoutmap
services.DetectorClocksService.InheritClockConfig: false
services.DetectorClocksService.TrigModuleName: "daq"

#microboone_tfile_metadata:
#{
#  JSONFileName:          "daq_hist.root.json"
#  GenerateTFileMetadata: false
#  dataTier:              "root-tuple"
#  fileFormat:            "root"
#}

# Database settings
#services.DatabaseUtil.DBHostName:    "ifdbprod2.fnal.gov"
#services.DatabaseUtil.DBName:        "hootgibson_prod"
#services.DatabaseUtil.DBUser:        "uboonedaq_web"
#services.DatabaseUtil.Port:          5444
#services.DatabaseUtil.PassFileName:  "uboonedb_passwd"  # name of password file. searched for using env var FW_SEARCH_PATH
#services.DatabaseUtil.ToughErrorTreatment: true
#services.DatabaseUtil.ShouldConnect: true
#services.DatabaseUtil.TableName: "main_run"

outputs: {
  out: {
    module_type: RootOutput
    fileName: "QuietEvents_Filtered.root"
    fastCloning: true
    compressionLevel: 1
    SelectEvents: [ quiet_path ]
  }
}
#wireParameterSets: false

physics:
{

 analyzers:
 {
   quieteventana: @local::microboone_quieteventana
 }

 filters: {
   quieteventfilter: @local::microboone_quieteventfilter
 }

 quiet_path: [ quieteventfilter ]
 analyzeIt:  [ quieteventana ]
 out_stream: [ out ]

 trigger_paths: [ quiet_path ]
 end_paths: [ out_stream ]
}


