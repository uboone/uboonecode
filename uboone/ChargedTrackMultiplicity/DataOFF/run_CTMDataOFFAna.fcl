#include "services_microboone.fcl"
#include "ctmdataoffana.fcl"

process_name: CTMDataoffana

services:
{
  #Load the service that manages root files for histograms.
  TFileService: { fileName: "ctmdataoffana.root" }
  #Timing:       {}
  TimeTracker:       {}
  #SimpleMemoryCheck:     { ignoreTotal: 1 }     #default is one
  RandomNumberGenerator: {}                     #ART native random number generator
  @table::microboone_services
  message:      @local::standard_info
  @table::microboone_services_reco
  FileCatalogMetadata:  @local::art_file_catalog_data
}
#source is now a root file
source:
{
  module_type: RootInput
  maxEvents:  -1            # Number of events to create
}

outputs:
{

}
physics:
{

 analyzers:     
 { 
   ctmdataoffana:
     {
 	module_type:  "CTMDataOFFAna"
     }
  }   
 
  #reco: 	[ctmdataoffana
  		 #flashtrigger
		 #trackkalmanhitflashmatch
#		 ]
   analysis:       [ ctmdataoffana ]

 #trigger_paths: [ reco ]

 end_paths:     [ analysis ] 
}

services.DetectorClocksService.InheritClockConfig:                     false
services.DetectorClocksService.TriggerOffsetTPC:                       -0.400e3

#physics.analyzers.cpmdataoffana.module_type:             "CTMDataOFFAna"
#physics.producers.trackkalmanhitflashmatch.TrackModuleLabel:               "trackkalmanhit"
#physics.producers.trackkalmanhitflashmatch.FlashModuleLabel:               "opflash"
#physics.producers.trackkalmanhitflashmatch.BeamFlashTrackMatchAlgParams.MakeOutsideDriftTags: "true"

microboone_tfile_metadata:
{
  JSONFileName: "ctmdataoffana.root.json"
  GenerateTFileMetadata: true
  dataTier:              "root-tuple"
  fileFormat:            "root"
}
