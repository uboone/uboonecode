////////////////////////////////////////////////////////////////////////
// Class:       MuCSTagFilter
// Module Type: filter
// File:        MuCSTagFilter_module.cc
//
// Generated at Wed Sep  7 11:07:58 2016 by Kazuhiro Terao using artmod
// from cetpkgsupport v1_10_02.
////////////////////////////////////////////////////////////////////////

#include "art/Framework/Core/EDFilter.h"
#include "art/Framework/Core/ModuleMacros.h"
#include "art/Framework/Principal/Event.h"
#include "art/Framework/Principal/Handle.h"
#include "art/Framework/Principal/Run.h"
#include "art/Framework/Principal/SubRun.h"
#include "art/Utilities/InputTag.h"
#include "fhiclcpp/ParameterSet.h"
#include "messagefacility/MessageLogger/MessageLogger.h"

#include "lardata/AnalysisBase/CosmicTag.h"
#include "lardata/RecoBase/Track.h"
#include "art/Framework/Core/FindManyP.h"
#include <memory>

class MuCSTagFilter;

class MuCSTagFilter : public art::EDFilter {
public:
  explicit MuCSTagFilter(fhicl::ParameterSet const & p);
  // The destructor generated by the compiler is fine for classes
  // without bare pointers or other resource use.

  // Plugins should not be copied or assigned.
  MuCSTagFilter(MuCSTagFilter const &) = delete;
  MuCSTagFilter(MuCSTagFilter &&) = delete;
  MuCSTagFilter & operator = (MuCSTagFilter const &) = delete;
  MuCSTagFilter & operator = (MuCSTagFilter &&) = delete;

  // Required functions.
  bool filter(art::Event & e) override;


private:

  // Declare member data here.
  std::string _track_producer;
};


MuCSTagFilter::MuCSTagFilter(fhicl::ParameterSet const & p)
// :
// Initialize member data here.
{
  // Call appropriate produces<>() functions here.
  _track_producer = p.get<std::string>("TrackProducer");
}

bool MuCSTagFilter::filter(art::Event & e)
{

  art::Handle< std::vector<anab::CosmicTag> > ctag_handle;
  e.getByLabel(Form("MuCSTrackTagger%s",_track_producer.c_str()),ctag_handle);

  if(!ctag_handle.isValid() || ctag_handle->empty()) return false;
 
  art::FindManyP<recob::Track> ptr_coll_v(ctag_handle, e, Form("MuCSTrackTagger%s",_track_producer.c_str()));
  if(ptr_coll_v.size() != 1) return false;
  
  return true;
}

DEFINE_ART_MODULE(MuCSTagFilter)
