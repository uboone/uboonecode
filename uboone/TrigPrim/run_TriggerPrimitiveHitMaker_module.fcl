#include "services_microboone.fcl"

process_name: TriggerPrimitiveHitMaker

services:
{
  scheduler:               { defaultExceptions: false }    # Make all uncaught exceptions fatal.
  # Load the service that manages root files for histograms.
  TFileService:            { fileName: "TriggerPrimitiveHitMaker_hist.root" } # For Claire: aux histograms output file
  TimeTracker:             {}
  ExptGeoHelperInterface:         @local::microboone_geometry_helper
  Geometry:                       @local::microboone_geo
  DetectorProperties:             @local::microboone_detproperties
  LArProperties:                  @local::microboone_properties
  DetectorClocksService:          @local::microboone_detectorclocks
  MemoryTracker:           { } # default is one
  RandomNumberGenerator:   {} #ART native random number generator
  message:                 @local::microboone_message_services_prod_debug
  FileCatalogMetadata:     @local::art_file_catalog_mc
}

source:
{
  module_type: RootInput
  maxEvents:   -1        # Number of events to create
  #inputCommands: ["keep *_*_*_*","drop *_*_*_DetSim", "drop *_*_*_G4"]#, "keep sim::MCTrack_*_*_*", "keep recob::Track_*_pandoraCosmic_*" ]
}

physics:
{
    
    producers:
        {
        
        ### random number saver
        rns:                 { module_type: RandomNumberSaver }
        tpm: { module_type: TriggerPrimitiveHitMaker }  # For Claire: The name of your module


        }

    analyzers:
        {

        }


    reco: [ rns, tpm ]

    ana: [ ]

    #define the output stream, there could be more than one if using filters 
    stream1:  [ out1 ]

    #trigger_paths is a keyword and contains the paths that modify the art::event, 
    #ie filters and producers
    trigger_paths: [reco] 

    #end_paths is a keyword and contains the paths that do not modify the art::Event, 
    #ie analyzers and output streams.  these all run simultaneously
    end_paths:     [ana, stream1]
}

#block to define where the output goes.  if you defined a filter in the physics
#block and put it in the trigger_paths then you need to put a SelectEvents: {SelectEvents: [XXX]}
#entry in the output stream you want those to go to, where XXX is the label of the filter module(s)
outputs:
{
    out1:
        {
        module_type: RootOutput
        fileName:    "TriggerPrimitiveHitMaker_candidates_tot.root" # For Claire: LArSoft output file
        dataTier:    "reco"
        compressionLevel: 1
        }
}

services.DetectorProperties.NumberTimeSamples:                             6400
services.DetectorProperties.ReadOutWindowSize:                             6400
services.DetectorClocksService.InheritClockConfig:                         false
services.DetectorClocksService.TriggerOffsetTPC:                          -0.400e3

# For Claire: examples of how to define configuration variables for your module
physics.producers.tpm.PrimMode: 2
#physics.producers.tpm.YourStringVariable: "blob"

