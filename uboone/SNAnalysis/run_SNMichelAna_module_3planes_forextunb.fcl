#include "services_microboone.fcl"

process_name: SNMichelAna

services:
{
  scheduler:               { defaultExceptions: false }    # Make all uncaught exceptions fatal.
  # Load the service that manages root files for histograms.
  TFileService:            { fileName: "%ifb_SNMichelAna_hist.root" }
  TimeTracker:             {}
  ExptGeoHelperInterface:         @local::microboone_geometry_helper
  Geometry:                       @local::microboone_geo
  DetectorProperties:             @local::microboone_detproperties
  LArProperties:                  @local::microboone_properties
  DetectorClocksService:          @local::microboone_detectorclocks
  MemoryTracker:           { } # default is one
  RandomNumberGenerator:   {} #ART native random number generator
  message:                 @local::microboone_message_services_prod_debug
  FileCatalogMetadata:     @local::art_file_catalog_mc
}

source:
{
  module_type: RootInput
  maxEvents:   -1        # Number of events to create
  #inputCommands: ["keep *_*_*_*","drop *_*_*_DetSim", "drop *_*_*_G4"]#, "keep sim::MCTrack_*_*_*", "keep recob::Track_*_pandoraCosmic_*" ]
}

physics:
{
    
    producers:
        {
        
        ### random number saver
        rns:                 { module_type: RandomNumberSaver }
  

        }

    analyzers:
        {
        snmichel2: { module_type: SNMichelAna }
        snmichel1: { module_type: SNMichelAna }
        snmichel0: { module_type: SNMichelAna }
        }


    reco: [ rns ]

    ana: [ snmichel2, snmichel1, snmichel0 ]

    #end_paths is a keyword and contains the paths that do not modify the art::Event, 
    #ie analyzers and output streams.  these all run simultaneously
    end_paths:     [ana]
}

#block to define where the output goes.  if you defined a filter in the physics
#block and put it in the trigger_paths then you need to put a SelectEvents: {SelectEvents: [XXX]}
#entry in the output stream you want those to go to, where XXX is the label of the filter module(s)
outputs:
{
#     out1:
#         {
#         module_type: RootOutput
#         fileName:    "SNMichelAna_candidates.root"
#         dataTier:    "reco"
#         compressionLevel: 1
#         }
}

services.DetectorProperties.NumberTimeSamples:                             6400
services.DetectorProperties.ReadOutWindowSize:                             6400
services.DetectorClocksService.InheritClockConfig:                         false
services.DetectorClocksService.TriggerOffsetTPC:                          -0.400e3
#physics.analyzers.snmichel.YourVariable: 2
physics.analyzers.snmichel2.HitProducer: "gaushit"
physics.analyzers.snmichel1.HitProducer: "gaushit"
physics.analyzers.snmichel0.HitProducer: "gaushit"
physics.analyzers.snmichel2.MichelProducer: "michel2" # Analyze Michels on collection plane
physics.analyzers.snmichel1.MichelProducer: "michel1" # Analyze Michels on second induction plane
physics.analyzers.snmichel0.MichelProducer: "michel0" # Analyze Michels on first induction plane
physics.analyzers.snmichel2.ADC2MeV: 8.976e-3 # From stopping muon analysis on collection plane
physics.analyzers.snmichel1.ADC2MeV: 8.976e-3 # From stopping muon analysis on collection plane
physics.analyzers.snmichel0.ADC2MeV: 8.976e-3 # From stopping muon analysis on collection plane
physics.analyzers.snmichel2.SamplesOverlapPre: 0. # TRIGGER STREAM!
physics.analyzers.snmichel2.SamplesOverlapPost: 0. # TRIGGER STREAM!
physics.analyzers.snmichel2.TotalSamplesPerRecord: 6400. # Truncated window
physics.analyzers.snmichel1.SamplesOverlapPre: 0. # TRIGGER STREAM!
physics.analyzers.snmichel1.SamplesOverlapPost: 0. # TRIGGER STREAM!
physics.analyzers.snmichel1.TotalSamplesPerRecord: 6400. # Truncated window
physics.analyzers.snmichel0.SamplesOverlapPre: 0. # TRIGGER STREAM!
physics.analyzers.snmichel0.SamplesOverlapPost: 0. # TRIGGER STREAM!
physics.analyzers.snmichel0.TotalSamplesPerRecord: 6400. # Truncated window
