#include "mchitmodules.fcl"
#include "eventweight_microboone_BNBcorrectionOnly.fcl"
#include "services_microboone.fcl"
#include "reco_uboone_mcc8.fcl"
#include "mctrutht0matching.fcl"
#include "reco_uboone_data_mcc8_driver_common.fcl"

process_name: OverlayStage1c

services.TFileService.fileName: "reco_stage_1c_hist.root"
#services.DetectorClocksService.TrigModuleName: "mixer"
services.DetectorClocksService.TrigModuleName: "daq"  # note that the clock time needed for the flash proper timing 
services.DetectorPropertiesService.NumberTimeSamples:        6400
services.DetectorPropertiesService.ReadOutWindowSize:        6400
services.DetectorClocksService.InheritClockConfig:           false
services.DetectorClocksService.TriggerOffsetTPC:             -0.400e3
services.FileCatalogMetadata.fileType: "overlay"

physics.filters.opfiltercommon: @local::physics.filters.opfiltercommonext

physics.producers.eventweight:  @local::microboone_eventweight
physics.producers.mchitfinder:  @local::standard_mchitfinder

physics.reco: [ opfiltercommon ]
physics.trigger_paths: [ reco ]
outputs.out1.fileName: "%ifb_%tc_reco1c.root"
outputs.out1.dataTier: "reconstructed-2d"
#source.inputCommands: ["keep *_*_*_*", "drop *_*_*_McReco*" ]
source.inputCommands: ["keep *_*_*_*" ]

physics.producers.wcNoiseFilter.DigitModuleLabel: "mixer"
#physics.producers.wcNoiseFilter.DigitModuleLabel: "daqnonoise"
#physics.producers.digitfilter.DigitModuleLabel: "mixer"
#physics.producers.ophit.InputModule: "mixer"
#physics.producers.ophitLow.InputModule: "mixer"
physics.producers.saturation.LGProducer: "mixer"
physics.producers.saturation.HGProducer: "mixer"
physics.producers.saturation.HGProducerCosmic: "pmtreadout"

#physics.producers.pandoraCosmicKHitFlashTag.TriggerProducer: "mixer"

#physics.producers.digitfilter.ProcessNoise:                         true
#physics.producers.digitfilter.FFTAlg.TransformViewVec:              [true,false,false]
#physics.producers.digitfilter.FFTAlg.ZigZagCorrectVec:              [true,true,false]

outputs.out1.outputCommands: [ "keep *_*_*_*",
                               "drop sim::SimChannels_*_*_*",
			       "drop sim::SimEnergyDeposits_*_*_*",
                               "drop raw::RawDigits_*_*_*",
                               "drop optdata::ChannelDataGroup_*_*_*" ]

