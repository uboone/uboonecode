#include "services_microboone.fcl"
#include "largeantmodules_microboone.fcl"
#include "mcreco.fcl"
#include "time_memory_tracker_microboone.fcl"
#include "filters.fcl" 

process_name: G4

services:
{
  scheduler:    { defaultExceptions: false }    # Make all uncaught exceptions fatal.
  # Load the service that manages root files for histograms.
  TFileService: { fileName: "g4_hist.root" }
  TimeTracker:             @local::microboone_time_tracker
  MemoryTracker:           @local::microboone_memory_tracker
  RandomNumberGenerator: {} #ART native random number generator
  FileCatalogMetadata:  @local::art_file_catalog_mc
  @table::microboone_g4_services
}

#source is now a root file
source:
{
  module_type: RootInput
  maxEvents:  10        # Number of events to create
  saveMemoryObjectThreshold: 0
}

# Define and configure some modules to do work on each event.
# First modules are defined; they are scheduled later.
# Modules are grouped by type.
physics:
{

 producers:
 {
   largeant: @local::microboone_largeant
   mcreco:   @local::standard_mcreco
   rns:      { module_type: "RandomNumberSaver" }
 }

 filters:
 {
  contfilter: @local::microboone_containmentfilter
 }


 #define the producer and filter modules for this path, order matters, 
 #filters reject all following items.  see lines starting physics.producers below
 simulate: [ rns, largeant, mcreco, contfilter]
 
 #define the output stream, there could be more than one if using filters 
 stream1:  [ out1 ]

 #trigger_paths is a keyword and contains the paths that modify the art::event, 
 #ie filters and producers
 trigger_paths: [simulate] 

 #end_paths is a keyword and contains the paths that do not modify the art::Event, 
 #ie analyzers and output streams.  these all run simultaneously
 end_paths:     [stream1]  
}

#block to define where the output goes.  if you defined a filter in the physics
#block and put it in the trigger_paths then you need to put a SelectEvents: {SelectEvents: [XXX]}
#entry in the output stream you want those to go to, where XXX is the label of the filter module(s)
outputs:
{
 out1:
 {
   module_type: RootOutput
   fileName:    "%ifb_%tc_g4.root"
   dataTier:    "simulated"
   saveMemoryObjectThreshold: 0
   SelectEvents: [ simulate ]
   compressionLevel: 1
   fastCloning: false
 }
}

physics.filters.contfilter.IsVerbose: false
physics.filters.contfilter.module_type: "ContainmentFilter"
physics.filters.contfilter.GenieModuleLabel: "generator" 
physics.filters.contfilter.MCRecoModuleLabel: "mcreco" 
physics.filters.contfilter.FidDistX: 10         # Fiducial volume, in cm
physics.filters.contfilter.FidDistY: 10         # Fiducial volume, in cm
physics.filters.contfilter.FidDistZ: 10         # Fiducial volume, in cm
physics.filters.contfilter.InclusiveSelection: false
physics.filters.contfilter.CheckNeutrinoMuon: true
physics.filters.contfilter.CheckNeutrinoElectron: false
physics.filters.contfilter.CheckNeutrinoPhotons: false
physics.filters.contfilter.CheckNeutrinoVertex: [false, false]
physics.filters.contfilter.CheckMuonFullContainment: [false, false]
physics.filters.contfilter.CheckMuonFracLength: [false, false]
physics.filters.contfilter.CheckMuonFracEnergy: [false, false]
physics.filters.contfilter.CheckElectronFracEnergy: [false, false]
physics.filters.contfilter.CheckPhotonConversionLocation: [false, false]
physics.filters.contfilter.CheckPhotonFracEnergy: [false, false]
physics.filters.contfilter.OnlyExceptThisManyPhotons: [false, 2]
physics.filters.contfilter.MinimumContainedTrackLength: 100  # Length of contained track, in cm
physics.filters.contfilter.MinimumContainedTrackEnergy: .5   # Fraction of contained track energy
physics.filters.contfilter.MinimumContainedShowerEnergy: .5  # Fraction of contained shower energy



physics.producers.largeant.KeepParticlesInVolumes: ["volCryostat"] #only keep MCParticles that cross the cryostat
physics.producers.mcreco.MCRecoPart.SavePathPDGList: [13,-13,211,-211,111,311,310,130,321,-321,2212,2112,2224,2214,2114,1114,3122,
                                                      1000010020,1000010030,1000020030,1000020040]

services.SpaceCharge.EnableSimSpatialSCE: true
services.SpaceCharge.EnableSimEfieldSCE: true
