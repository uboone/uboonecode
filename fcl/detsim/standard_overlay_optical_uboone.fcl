#include "services_microboone.fcl"

#include "microboone_overlay.fcl"
#include "swtrigger_microboone.fcl"

process_name : DataOverlayOptical      

source : {
  module_type : RootInput
  maxEvents   : -1
}

services : {

  TFileService: { fileName: "DataOverlayMixer_hist.root" }
  TimeTracker:  {}
  MemoryTracker:     { }     #default is one
  RandomNumberGenerator: {}                     #ART native random number generator

  @table::microboone_simulation_services
  FileCatalogMetadata:  @local::art_file_catalog_overlay
  message:      @local::standard_info
}

outputs: {
  out: { module_type: RootOutput
  	         fileName: "%ifb_%tc_overlaid.root"
		 fastCloning: false
		 compressionLevel: 1 
		 dataTier: "detector-simulated"}
}

physics: {

  producers : {
    mixer: @local::microboone_overlay
  }

  analyzers: { }

  filters : {
    swtrigger: @local::microboone_swtrigger_mc_bnb
  }


  mixer_path : [ mixer, swtrigger ]
  trigger_paths : [ mixer_path ]

  output : [ out ]
  end_paths: [ output ]

}

services.PmtGainService.PmtGainProvider.UseDB:               true

physics.producers.mixer.RawDigitDataModuleLabel: "" #disable tpc
physics.producers.mixer.RawDigitMCModuleLabel:   "" #disable tpc
physics.producers.mixer.OpDetDataModuleLabel:    "pmtreadout"
physics.producers.mixer.OpDetMCModuleLabel:      "pmtreadoutnonoise"
physics.producers.mixer.TriggerDataModuleLabel:  "daq"
physics.producers.mixer.CRTMCModuleLabel:       "" #disable CRT
physics.producers.mixer.CRTDataModuleLabel:     "" #disable CRT
physics.producers.mixer.TriggerMCModuleLabel:  "triggersim"

physics.filters.swtrigger.OpDataModule: "mixer"
physics.filters.swtrigger.DAQHeaderModule: "mixer"

services.DetectorClocksService.InheritClockConfig: false

#make smaller file name length
outputs.out.fileName: "%ifb_mix.root"
