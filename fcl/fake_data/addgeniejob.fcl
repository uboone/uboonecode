# nope #include "services.fcl"

#include "AddGenieEventsToArt.fcl"
#include "GenieOutput.fcl"

process_name:  MoreGenie

services:
{
  # Load the service that manages root files for histograms.
  TFileService:          { fileName: "addgenie_hist.root" closeFileFast: false }
  RandomNumberGenerator: {} #ART native random number generator
  #scheduler:             { wantSummary: true }

  # IFDH:          {IFDH_BASE_URI:  "http://samweb.fnal.gov:8480/sam/nova/api"}
  # nope  @table::standard_services
}

# Edit here to generate in a different detector. See Geometry.fcl
# If this is changed be sure to change the GENIE flux (below) to match
# services.Geometry: @local::nd_geo

#Start each new event with an empty event.
source:
{
  module_type: EmptyEvent
  firstRun:    1000001     # Run number to use for this file
  firstSubRun: 1           # Subrun number to use for this file
  firstEvent:  1           # number of first event in the file
}

# Define and configure some modules to do work on each event.
# First modules are defined; they are scheduled later.
# Modules are grouped by type.
physics:
{

  producers:
  {
    generator:    @local::standard_add_genie
  }

  analyzers:
  {
    outputgenie:  @local::standard_genie_output
  }

   simulate: [ generator ]

  stream1:  [ out1 ] #outputgenie, out1 ]

  trigger_paths:   [ simulate ]
  end_paths:       [ stream1 ]

}

outputs:
{
  out1:
  {
    module_type:  RootOutput
    fileName:     "addgenie.root"   # default name, override w/ -o --output
    SelectEvents: [ simulate ]
  }
}

# List the input files (GHEP format) to dump to artroot here
physics.producers.generator.fileList: [ "/uboone/data/users/gardiner/richie/MicroBooNE-G18_10a_02_11a-numu.ghep.root" ]
# No MCFlux objects should be made for events generated using a simple
# flux histogram (all samples I'm making using gevgen)
physics.producers.generator.addMCFlux: false

physics.analyzers.outputgenie.dumpFilePattern: "cout"
physics.analyzers.outputgenie.dumpMCTruth: true
physics.analyzers.outputgenie.dumpGTruth:  true
physics.analyzers.outputgenie.dumpMCFlux:  false
