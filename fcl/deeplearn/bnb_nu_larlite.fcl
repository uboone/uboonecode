#include "services_microboone.fcl"
#include "genie_microboone.fcl"
#include "largeantmodules_microboone.fcl"
#include "mcreco.fcl"
#include "detsimmodules_microboone.fcl"
#include "triggersim_microboone.fcl"
#include "opticaldetectorsim_microboone.fcl"
#include "opticaldetectormodules_microboone.fcl"
#include "photpropservices_microboone.fcl"
#include "correct_saturation.fcl"
#include "caldata_microboone.fcl" 
#include "time_memory_tracker_microboone.fcl"
#include "swtrigger_microboone.fcl"
#include "ubflashfinder.fcl" 
#include "litemc_mcinfo.fcl"
#include "litemc_simch.fcl"
#include "litemc_wire.fcl"
#include "litemc_opreco.fcl"
#include "litemc_opdigit.fcl"

process_name: BNBNuLArLite

services:
{
  scheduler:               { defaultExceptions: false }    # Make all uncaught exceptions fatal.
  # Load the service that manages root files for histograms.
  TFileService: { fileName: "mc_hist.root" }
  TimeTracker:             @local::microboone_time_tracker
  MemoryTracker:           @local::microboone_memory_tracker
  RandomNumberGenerator:   {} #ART native random number generator                                                                                          
  message:                 @local::microboone_message_services_prod_debug
  FileCatalogMetadata:  @local::art_file_catalog_mc
  LLMetaMaker: {Enable: true}
  @table::microboone_simulation_services
}

services.Geometry.ForceUseFCLOnly: true

services.FileCatalogMetadata.applicationVersion: "develop"
services.FileCatalogMetadata.fileType: "mc"
services.FileCatalogMetadata.runType: "physics"
services.FileCatalogMetadataMicroBooNE: {
  FCLName: "run_larlite_maker_mc.fcl"
  FCLVersion: "develop"
  ProjectName: "LiteMC"
  ProjectStage: "LiteMaker"
  ProjectVersion: "develop"
}

services.SignalShapingServiceMicroBooNE.StretchFullResponse: true
services.SignalShapingServiceMicroBooNE.NConfigs:            2
services.SignalShapingServiceMicroBooNE.FilterFuncVec:  [ "(x>0.0)*gaus", "(x>0.0)*gaus", "(x>0.0)*gaus" ]
services.SignalShapingServiceMicroBooNE.FilterParamsVec:   [ [ 1.0, 0.0, 0.1 ], [ 1.0, 0.0, 0.1 ], [ 1.0, 0.0, 0.1 ] ]
services.SignalShapingServiceMicroBooNE.FilterWidthCorrectionFactor: [ 0.738, 0.738, 0.738 ]

services.TimeTracker.printSummary: false
services.TimeTracker.dbOutput: {}

services.MemoryTracker.printSummaries: []
services.MemoryTracker.includeMallocInfo: false
services.MemoryTracker.filename: ""

source:
{
  module_type: EmptyEvent
  timestampPlugin: { plugin_type: "GeneratedEventTimestamp" }
  maxEvents:   10          # Number of events to create
  firstRun:    5000        # Run number to use for this file
  firstEvent:  1           # number of first event in the file
}

physics:
{

 producers:
 {
   generator: @local::microboone_genie_uniform_flux_cc
   largeant: @local::microboone_largeant
   mcreco:   @local::standard_mcreco
   optdigitizer:   @local::microboone_optical_adc_sim
   optfem:         @local::microboone_optical_fem_sim
   triggersim:     @local::ubtrigger_dark_bnb
   pmtreadout:     @local::microboone_optical_dram_readout_sim

   ophitBeam         : @local::microboone_ophit_saturation_beam
   ophitCosmic       : @local::microboone_ophit_saturation_cosmic
   saturation : @local::correct_saturation_mc
   simpleFlashBeam   : @local::UBFlashBeamMC
   simpleFlashCosmic : @local::UBFlashCosmicMC
   opflashBeam       : @local::microboone_opflash_saturation_beam
   opflashCosmic     : @local::microboone_opflash_saturation_cosmic

   rns:       { module_type: "RandomNumberSaver" }
 }

 analyzers:
 {
   mcinfo:  @local::litemc_mcinfo
   simch:   @local::litemc_simch

   wire:    @local::litemc_wire
   opdigit: @local::litemc_opdigit
   opreco:  @local::litemc_opreco
 }

 filters: { swtrigger: @local::microboone_swtrigger_mc_bnb }

 simulate: [ rns, generator, 
             largeant, mcreco, 
             optdigitizer, optfem, triggersim, pmtreadout, swtrigger,
             saturation,
             ophitBeam, ophitCosmic, 
             simpleFlashBeam, simpleFlashCosmic, opflashBeam, opflashCosmic]

 ana: [ mcinfo, opdigit, opreco ]
 
 stream1:  []

 trigger_paths: [simulate] 

 end_paths:     [stream1,ana]  
}
# generator
physics.producers.generator: @local::microboone_genie_simple
physics.producers.generator.GlobalTimeOffset: 3125.
physics.producers.generator.RandomTimeOffset: 1600.
physics.producers.generator.TopVolume: "volTPCActive"
physics.producers.generator.BeamName:  "booster"
physics.producers.generator.FluxCopyMethod:   "IFDH"
physics.producers.generator.MaxFluxFileMB:    2000

# G4 step
physics.producers.mcreco.MCRecoPart.SavePathPDGList: [13,-13,211,-211,111,311,310,130,321,-321,2212,2112,2224,2214,2114,1114,3122,
                                                      1000010020,1000010030,1000020030,1000020040]
physics.producers.largeant.KeepParticlesInVolumes: ["volCryostat"] #only keep MCParticles that cross the cryostat
physics.producers.mcreco.MCRecoPart.SavePathPDGList: [13,-13,211,-211,111,311,310,130,321,-321,2212,2112,2224,2214,2114,1114,3122,
                                                      1000010020,1000010030,1000020030,1000020040]
services.SpaceCharge.EnableSimSpatialSCE: true
services.SpaceCharge.EnableSimEfieldSCE: true

services.UBOpticalChConfig.PedestalSpread: [ 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 
                                             0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 
                                             0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 
                                             0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                                             0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 
                                             0.0, 0.0, 0.0, 0.0, 0.0, 0.0, # channels 0-35
                                             0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 
                                             0.0, 0.0, 0.0, 0.0, 0.0, 0.0, # logic channels 36-47
                                             0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 
                                             0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 
                                             0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 
                                             0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                                             0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 
                                             0.0, 0.0, 0.0, 0.0, 0.0, 0.0, # channels 100-135
                                             0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 
                                             0.0, 0.0, 0.0, 0.0, 0.0, 0.0, # logic channels 136-147
                                             0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 
                                             0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 
                                             0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 
                                             0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                                             0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 
                                             0.0, 0.0, 0.0, 0.0, 0.0, 0.0, # channels 200-236
                                             0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 
                                             0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 
                                             0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 
                                             0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                                             0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 
                                             0.0, 0.0, 0.0, 0.0, 0.0, 0.0] # channels 300-335

services.UBOpticalChConfig.DarkRate:       [ 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 
                                             0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 
                                             0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 
                                             0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                                             0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 
                                             0.0, 0.0, 0.0, 0.0, 0.0, 0.0, # channels 0-35
                                             0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 
                                             0.0, 0.0, 0.0, 0.0, 0.0, 0.0, # logic channels 36-47
                                             0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 
                                             0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 
                                             0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 
                                             0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                                             0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 
                                             0.0, 0.0, 0.0, 0.0, 0.0, 0.0, # channels 100-135
                                             0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 
                                             0.0, 0.0, 0.0, 0.0, 0.0, 0.0, # logic channels 136-147
                                             0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 
                                             0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 
                                             0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 
                                             0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                                             0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 
                                             0.0, 0.0, 0.0, 0.0, 0.0, 0.0, # channels 200-236
                                             0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 
                                             0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 
                                             0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 
                                             0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                                             0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 
                                             0.0, 0.0, 0.0, 0.0, 0.0, 0.0] # channels 300-335



# detsim

# lite maker
physics.analyzers.mcinfo.SelectEvents:  { SelectEvents: [ simulate ] }
physics.analyzers.opdigit.SelectEvents: { SelectEvents: [ simulate ] }
physics.analyzers.opreco.SelectEvents:  { SelectEvents: [ simulate ] }

physics.analyzers.mcinfo.stream:      "mcinfo"
physics.analyzers.opdigit.stream:     "opdigit"
physics.analyzers.opreco.stream:      "opreco"

physics.analyzers.mcinfo.out_filename:      "larlite_mcinfo.root"
physics.analyzers.opdigit.out_filename:     "larlite_opdigit.root"
physics.analyzers.opreco.out_filename:      "larlite_opreco.root"

physics.analyzers.opreco.DataLookUpMap.ophit: ["ophitBeam","ophitCosmic"]
physics.analyzers.opreco.DataLookUpMap.opflash: ["simpleFlashBeam","simpleFlashCosmic","opflashBeam","opflashCosmic"]

physics.analyzers.opreco.AssociationLookUpMap.ophit: ["ophitBeam","ophitCosmic"]
physics.analyzers.opreco.AssociationLookUpMap.opflash: ["simpleFlashBeam","simpleFlashCosmic","opflashBeam","opflashCosmic"]

outputs:
{
 out1:
 {
   module_type: RootOutput
   fileName:    "genie_gen.root" #default file name, can override from command line with -o or --output
   dataTier:    "generated"
   compressionLevel: 1
 }
}

