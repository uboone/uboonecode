#include "dldata_fclbase_producers.fcl"
#include "dldata_fclbase_analyzers.fcl"
#include "dldata_fclbase_services.fcl"
#include "time_memory_tracker_microboone.fcl"

process_name: LArLite

services:
{
  scheduler:    { defaultExceptions: false }
  TFileService: { fileName: "mc_hist.root" }
  TimeTracker:             @local::microboone_time_tracker
  MemoryTracker:           @local::microboone_memory_tracker
  message:                 @local::microboone_message_services_prod_debug
  FileCatalogMetadata:     @local::art_file_catalog_mc
  @table::dldata_services
}

services.TimeTracker.printSummary: false
services.TimeTracker.dbOutput: {}
services.MemoryTracker.printSummaries: []
services.MemoryTracker.includeMallocInfo: false
services.MemoryTracker.filename: ""

services.FileCatalogMetadata.applicationVersion: "develop"
services.FileCatalogMetadata.fileType: "mc"
services.FileCatalogMetadata.runType: "physics"
services.FileCatalogMetadataMicroBooNE: {
  FCLName: "run_larlite_maker_mc.fcl"
  FCLVersion: "develop"
  ProjectName: "LiteMC"
  ProjectStage: "LiteMaker"
  ProjectVersion: "develop"
}

source:
{
  maxEvents:   -1          # Number of events to create
}

physics:
{
 producers: { }

 #filters: { @table::dldata_filters }

 analyzers: { }

 ana: [ @sequence::dldata_analyze_all ]

 end_paths:     [ana]
 trigger_paths: []
}

outputs:
{
 out1:
 {
   module_type: RootOutput
   fileName:    "larsoft.root" #default file name, can override from command line with -o or --output
   dataTier:    "larlite"
   compressionLevel: 1
 }
}

