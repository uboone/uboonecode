#include "dlprod_fclbase_analyzers.fcl"
#include "standard_ana_uboone.fcl"

process_name: Ana

# Add larcv required services.

services.LLMetaMaker: {Enable: false}
services.LArCVMetaMaker: {Enable: false}

# Add larcv analyzer modules.
physics.analyzers:  {
		    @table::physics.analyzers
		    @table::dlprod_analyzers
		    }
# configure ana tree
physics.analyzers.analysistree.SaveCryInfo:     false
physics.analyzers.analysistree.SaveGenieInfo:   false
physics.analyzers.analysistree.SaveGeantInfo:   false
physics.analyzers.analysistree.SaveMCShowerInfo:false
physics.analyzers.analysistree.SaveMCTrackInfo: false
physics.analyzers.analysistree.SaveShowerInfo:  false
physics.analyzers.analysistree.SaveCaloCosmics: true
physics.analyzers.analysistree.SaveSWTriggerInfo: false
# configure supera
physics.analyzers.superaWholeView.supera_params: "supera_basic.fcl"
# configure larlite
physics.analyzers.opreco.trigger: ["daq"]

# Define larcv analyzer sequence.
physics.ana:   [ analysistree ]
physics.larcv: [ reco2d, opreco, superaWholeView ]

# Add larcv sequence to end_paths.
physics.end_paths: [ larcv ]

# Configuration for TFileMetadataMicroBooNE service.

microboone_tfile_metadata:
{
  JSONFileName:	[ "ana_hist.root.json", 
                  "larlite_opreco.root.json",
                  "larlite_reco2d.root.json",
                  "larcv.root.json" ]
  GenerateTFileMetadata: [ true, true, true, true ]
  dataTier:              [ "root-tuple", "larlite", "larlite", "larcv" ]
  fileFormat:            [ "root", "root", "root", "root" ]
}

