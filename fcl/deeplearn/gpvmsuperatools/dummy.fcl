#include "services_microboone.fcl"
#include "singles_microboone.fcl"

process_name: SuperaDummy

services:
{
  #scheduler:               { defaultExceptions: false }    # Make all uncaught exceptions fatal.
  # Load the service that manages root files for histograms.
  #TFileService: { fileName: "mc_hist.root" }
  #TimeTracker:             @local::microboone_time_tracker
  #MemoryTracker:           @local::microboone_memory_tracker
  #RandomNumberGenerator:   {} #ART native random number generator                                                                                          
  #message:                 @local::microboone_message_services_prod_debug
  FileCatalogMetadata:     @local::art_file_catalog_mc
  #LLMetaMaker: {Enable: false }
  @table::microboone_simulation_services
}

source:
{
  module_type: EmptyEvent
  timestampPlugin: { plugin_type: "GeneratedEventTimestamp" }
  maxEvents:   1          # Number of events to create
  firstRun:    1           # Run number to use for this file
  firstEvent:  1           # number of first event in the file
}

physics:
{

 producers:
 {
  generator: @local::microboone_singlep
 }

 analyzers:
 {
 }

 stream1:  []

 trigger_paths: []

 end_paths:     []  
}

services.ChannelStatusService.ChannelStatusProvider.UseDB: false

outputs:
{
}

