#include "services_microboone.fcl"
#include "genie_microboone.fcl"
#include "largeantmodules_microboone.fcl"
#include "mcreco.fcl"
#include "detsimmodules_microboone.fcl"
#include "triggersim_microboone.fcl"
#include "opticaldetectorsim_microboone.fcl"
#include "opticaldetectormodules_microboone.fcl"
#include "photpropservices_microboone.fcl"
#include "correct_saturation.fcl"
#include "caldata_microboone.fcl" 
#include "time_memory_tracker_microboone.fcl"
#include "swtrigger_microboone.fcl"
#include "litemc_mcinfo.fcl"
#include "litemc_simch.fcl"
#include "litemc_wire.fcl"
#include "litemc_opreco.fcl"
#include "litemc_opdigit.fcl"
#include "litemc_reco2d.fcl"
#include "microboone_dlpmtprecuts.fcl"

BEGIN_PROLOG
SuperaModule: {
  module_type:     "LArSoftSuperaSriver"
  #supera_params:   "supera_basic.fcl"
  supera_params:   "supera_segment_calmod.fcl"
  out_filename:    "larcv.root"
  unique_filename: true
  stream:          "mc"
}
VPlaneHandler: {
  module_type: "VPlaneHandler"
  ProducerLabel: "caldata"
  Smooth: true
  HandlePlateau: true
  Shift: true
}
END_PROLOG

process_name: MCC2LL

services:
{
  scheduler:               { defaultExceptions: false }    # Make all uncaught exceptions fatal.
  # Load the service that manages root files for histograms.
  TFileService: { fileName: "mc_hist.root" }
  TimeTracker:             @local::microboone_time_tracker
  MemoryTracker:           @local::microboone_memory_tracker
  RandomNumberGenerator:   {} #ART native random number generator                                                                                          
  message:                 @local::microboone_message_services_prod_debug
  FileCatalogMetadata:  @local::art_file_catalog_mc
  LLMetaMaker: {Enable: true}
  LArCVMetaMaker: {Enable: true}
  @table::microboone_simulation_services
}

services.FileCatalogMetadata.applicationVersion: "develop"
services.FileCatalogMetadata.fileType: "mc"
services.FileCatalogMetadata.runType: "physics"
services.FileCatalogMetadataMicroBooNE: {
  FCLName: "dlmc_larlite.fcl"
  FCLVersion: "develop"
  ProjectName: "lite"
  ProjectStage: "lite"
  ProjectVersion: "develop"
}

services.SignalShapingServiceMicroBooNE.StretchFullResponse: true
services.SignalShapingServiceMicroBooNE.NConfigs:            2
services.SignalShapingServiceMicroBooNE.FilterFuncVec:  [ "(x>0.0)*gaus", "(x>0.0)*gaus", "(x>0.0)*gaus" ]
services.SignalShapingServiceMicroBooNE.FilterParamsVec:   [ [ 1.0, 0.0, 0.1 ], [ 1.0, 0.0, 0.1 ], [ 1.0, 0.0, 0.1 ] ]
services.SignalShapingServiceMicroBooNE.FilterWidthCorrectionFactor: [ 0.738, 0.738, 0.738 ]

services.DetectorPropertiesService.NumberTimeSamples:        6400
services.DetectorPropertiesService.ReadOutWindowSize:        6400
services.DetectorClocksService.InheritClockConfig:           false
services.DetectorClocksService.TriggerOffsetTPC:             -0.400e3

services.TimeTracker.printSummary: false
services.TimeTracker.dbOutput: {}

services.MemoryTracker.printSummaries: []
services.MemoryTracker.includeMallocInfo: false
services.MemoryTracker.filename: ""

source:
{
  module_type: RootInput
  inputCommands: ["keep *_*_*_*","drop raw::ubdaqSoftwareTriggerData_*_*_*"]
}

physics:
{

 producers: { calmod: @local::VPlaneHandler }

 filters: { 
            swtrigger: @local::microboone_swtrigger_mc_bnb 
            dlpmtprecuts: @local::microboone_dlpmtprecuts
          }

 analyzers:
 {
   mcinfo:  @local::litemc_mcinfo
   opreco:  @local::litemc_opreco
   reco2d:  @local::litemc_reco2d
   supera:  @local::SuperaModule
 }

 sim: [ swtrigger, dlpmtprecuts, calmod ]
 ana: [ mcinfo, opreco, reco2d, supera  ]
 
 stream1:  []

 trigger_paths: [sim]

 end_paths:     [ana]
}

physics.analyzers.mcinfo.stream:      "mcinfo"
physics.analyzers.opreco.stream:      "opreco"
physics.analyzers.reco2d.stream:      "reco2d"

physics.analyzers.mcinfo.out_filename:      "larlite_mcinfo.root"
physics.analyzers.opreco.out_filename:      "larlite_opreco.root"
physics.analyzers.reco2d.out_filename:      "larlite_reco2d.root"

physics.analyzers.reco2d.DataLookUpMap.hit: ["gaushit"]

physics.analyzers.mcinfo.SelectEvents:  [sim]
physics.analyzers.opreco.SelectEvents:  [sim]
physics.analyzers.reco2d.SelectEvents:  [sim]
physics.analyzers.supera.SelectEvents:  [sim]

physics.filters.dlpmtprecuts.OpHitProducer: "ophitBeam"
