#include "twobodydecay.fcl"
#include "services_microboone.fcl"

process_name: TwoBodyDecayGen

services:
{
  scheduler:    { defaultExceptions: false }    # Make all uncaught exceptions fatal.
  # Load the service that manages root files for histograms.
  TFileService: { fileName: "single_hist_uboone.root" }
  TimeTracker:  {}
  MemoryTracker:     { } # default is one
  RandomNumberGenerator: {} #ART native random number generator
  FileCatalogMetadata:  @local::art_file_catalog_mc
  @table::microboone_gen_services
}

#Start each new event with an empty event.
source:
{
  module_type: EmptyEvent
  timestampPlugin: { plugin_type: "GeneratedEventTimestamp" }
  maxEvents:   10          # Number of events to create
  firstRun:    1           # Run number to use for this file
  firstEvent:  1           # number of first event in the file
}

# Define and configure some modules to do work on each event.
# First modules are defined; they are scheduled later.
# Modules are grouped by type.
physics:
{

 producers:
 {
   generator: @local::standard_twobodydecay
   rns:       { module_type: "RandomNumberSaver" }
 }

 #define the producer and filter modules for this path, order matters, 
 #filters reject all following items.  see lines starting physics.producers below
 simulate: [ rns, generator ]

 #define the output stream, there could be more than one if using filters 
 stream1:  [ out1 ]

 #trigger_paths is a keyword and contains the paths that modify the art::event, 
 #ie filters and producers
 trigger_paths: [simulate] 

 #end_paths is a keyword and contains the paths that do not modify the art::Event, 
 #ie analyzers and output streams.  these all run simultaneously
 end_paths:     [stream1]  
}

#block to define where the output goes.  if you defined a filter in the physics
#block and put it in the trigger_paths then you need to put a SelectEvents: {SelectEvents: [XXX]}
#entry in the output stream you want those to go to, where XXX is the label of the filter module(s)
outputs:
{
 out1:
 {
   module_type: RootOutput
   fileName:    "single_gen_uboone.root"
   dataTier:    "generated"
   compressionLevel: 1
 }
}

outputs.out1.fileName: "diphoton_gen.root"

physics.producers.generator.PadOutVectors: true
physics.producers.generator.SingleVertex: true 

physics.producers.generator.PDG: [ 22,22 ]            # Di-photon
physics.producers.generator.PosDist: 0             # Flat position dist.
physics.producers.generator.X0: [ 128.0 ]
physics.producers.generator.Y0: [ 0.0  ]
physics.producers.generator.Z0: [ 518.5 ]
physics.producers.generator.T0: [ 10000 ] #for 0.08 GeV, 2264ns ~ 12000ns
physics.producers.generator.SigmaT: [ 1. ]        # In time
physics.producers.generator.SigmaX: [ 128. ]      # x = (0, 256)
physics.producers.generator.SigmaY: [ 116.5 ]      # y = (-116.5, 116.5)
physics.producers.generator.SigmaZ: [ 518.5 ]      # z = (0, 1037)
physics.producers.generator.PDist:  "histograms"     # Read a histogram
#physics.producers.generator.HistogramFile:  "./g4numi_histOutput_zlt40m.root"     # Read a histogram
physics.producers.generator.HistogramFile:  "/pnfs/uboone/resilient/users/klin/heavyQCDaxion_sim/fluxhist/g4numiFHCnm_histOutput_zlt40m.root"
physics.producers.generator.PHist:  ["EAtub"]     # Read a histogram, unit in GeV
#physics.producers.generator.P0: [ 1.0  ]           # 0.53+-0.52 GeV
#physics.producers.generator.SigmaP: [ 9.87 ]
physics.producers.generator.AngleDist: "histograms"          # Flat angle dist.
physics.producers.generator.ThetaXzYzHist:  ["ThetaXZYZ2Datub"]     # Read a TH2 histogram, unit in degrees
#physics.producers.generator.Theta0XZ: [ 27.85 ]       # y-azimuth for ub@NuMI
#physics.producers.generator.Theta0YZ: [ 2.82 ]       # y-latitude for ub@NuMI
#physics.producers.generator.SigmaThetaXZ: [ 0.25 ] # Quasi-isotropic
#physics.producers.generator.SigmaThetaYZ: [ 0.12 ]

physics.producers.generator.MotherMassDist:                "uniform"
physics.producers.generator.MotherMass:                    [0.03]
physics.producers.generator.SigmaMotherMass:               [0.]
physics.producers.generator.AngEXTDist:              "uniform"
physics.producers.generator.Theta0XZEXT:                  [180]
physics.producers.generator.SigmaTheta0XZEXT:             [180]
physics.producers.generator.Theta0YZEXT:            [0]
physics.producers.generator.SigmaTheta0YZEXT:       [90]
