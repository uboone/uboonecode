#include "services_microboone.fcl"
#include "microboone_eventweight_service.fcl"
#include "seedservice_microboone.fcl"
#include "eventweight_microboone.fcl"

process_name: EventWeightFilterCV

services: {
  TimeTracker: {}
  MemoryTracker: {}
  RandomNumberGenerator: {}
  FileCatalogMetadata: @local::art_file_catalog_mc
  NuRandomService: @local::microboone_seedservice
  UBEventWeight: @local::microboone_eventweight_service
}

source: {
  module_type: RootInput
}

physics: {
 producers: {
   rns: {
     module_type: "RandomNumberSaver"
   }
 }
 filters: {
   weightfilter:{
       module_type: "WeightFilter"

       ApplyExternalWeight: false
       ExternalWeight: 1.0

       ApplyEventWeight: true
       
       EventWeightTags: ["eventweight"]  
       WeightNames: [ ["RootinoFix_UBGenie","TunedCentralValue_UBGenie","splines_general_Spline"] ]

       ApplyPOTWeight: true
       POTWeight: 0.1
       POTInfoTag: "generator"
       Verbose: true
   }
 }
 analyzers:{
#   potana: { 
#             module_type: POTSummaryAna
#             InputTag: "weightfilter"
#           }
 }
    filter: [ rns, weightfilter ]
    trigger_paths: [ filter ]
#    ana: [ potana ]
    stream1: [ out1 ]
    end_paths: [ stream1 ]
}

outputs: {
 out1: {
   module_type: RootOutput
   fileName: "%ifb_%tc_eventweight.root"
   dataTier: "reconstructed"
   compressionLevel: 1
   SelectEvents: ["filter"]
 }
}

