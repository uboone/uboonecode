#include "dlprod_fclbase_analyzers.fcl"
#include "microboone_dlpmtprecuts.fcl"
#include "standard_ana_uboone.fcl"

process_name: Ana

# Add larcv required services.

services.LLMetaMaker: {Enable: false}
services.LArCVMetaMaker: {Enable: false}

# Add larcv analyzer modules.

physics.analyzers:  {
		    @table::physics.analyzers
		    @table::dlprod_analyzers
		    }

# Add precuts filter
physics.filters: {
  dlpmtprecuts: @local::microboone_dlpmtprecuts
}
physics.filters.dlpmtprecuts.OpHitProducer: "ophitBeam"

# Define DL precut filter sequence
physics.dlfilter: [ dlpmtprecuts ]

# Define larcv analyzer sequence.
physics.ana:   [ analysistree ]
physics.larcv: [ reco2d, opreco, mcinfo, superaWholeViewMC, superaMCTruthOnly ]
physics.analyzers.superaMCTruthOnly.out_filename: "larcv_mctruth.root"

# Add dl precut filter to trigger paths
physics.trigger_paths: [ dlfilter ]

# Add larcv sequence to end_paths.
physics.end_paths: [ larcv ]

# setup filter
physics.analyzers.reco2d.SelectEvents:  [ dlfilter ]
physics.analyzers.opreco.SelectEvents:  [ dlfilter ]
physics.analyzers.mcinfo.SelectEvents:  [ dlfilter ]
physics.analyzers.superaWholeViewMC.SelectEvents:  [ dlfilter ]
physics.analyzers.superaMCTruthOnly.SelectEvents:  [ dlfilter ]

# Configuration for TFileMetadataMicroBooNE service.
microboone_tfile_metadata:
{
  JSONFileName:	[ "ana_hist.root.json", 
                  "larlite_reco2d.root.json",
                  "larlite_opreco.root.json",
                  "larlite_mcinfo.root.json",
                  "larcv.root.json", 
		  "larcv_mctruth.root.json" ]
  GenerateTFileMetadata: [ true, true, true, true, true, true ]
  dataTier:              [ "root-tuple", "larlite", "larlite", "larlite", "larcv", "larcv" ]
  fileFormat:            [ "root", "root", "root", "root", "root", "root" ]
}

