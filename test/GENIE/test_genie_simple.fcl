#include "time_memory_tracker_microboone.fcl"
#include "services_microboone.fcl"
#include "genie_microboone.fcl"

//========================================

process_name: GENIEGen

services:
{
  scheduler:    { defaultExceptions: false }    # Make all uncaught exceptions fatal.
  # Load the service that manages root files for histograms.
  TFileService: { fileName: "gen_hist.root" }
  TimeTracker:             @local::microboone_time_tracker
  MemoryTracker:           @local::microboone_memory_tracker
  RandomNumberGenerator: {} #ART native random number generator
  FileCatalogMetadata:  @local::art_file_catalog_mc
  @table::microboone_g4_services
  IFDH: {}
}

source:
{
  module_type: EmptyEvent
  timestampPlugin: { plugin_type: "GeneratedEventTimestamp" }
  maxEvents:   10          # Number of events to create
  firstRun:    1           # Run number to use for this file
  firstEvent:  1           # number of first event in the file
}

physics:
{
  producers:
  {   
    generator: @local::microboone_genie_simple
    rns: { module_type: "RandomNumberSaver" }
  }

  simulate: [ rns, generator ] 
  trigger_paths: [ simulate ] 
   
  stream1: [ out1 ]
  end_paths: [ stream1 ]
}

outputs:
{
  out1:
  {  
   module_type: RootOutput
   fileName:    "genie_simple.root"
   dataTier:    "simulated"
   saveMemoryObjectThreshold: 0
   compressionLevel: 1
   fastCloning: false
 }
}

# Do not inherit clock configuration from the data
services.DetectorClocksService.InheritClockConfig: false

# Generator settings
physics.producers.generator.GlobalTimeOffset:   3125.
physics.producers.generator.RandomTimeOffset:   1600.
physics.producers.generator.TopVolume:          "volCryostat"
physics.producers.generator.BeamName:           "booster"
physics.producers.generator.FluxType:           "simple_flux"
physics.producers.generator.FluxFiles:          [ "converted_beammc_wincorr*.root" ]
physics.producers.generator.FluxSearchPaths:    "/pnfs/uboone/persistent/stash/uboonebeam/bnb_gsimple/bnb_gsimple_fluxes_01.09.2019_463/"
physics.producers.generator.FluxCopyMethod:     "DIRECT"
